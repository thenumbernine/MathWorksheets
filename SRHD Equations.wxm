/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 13.04.0 ] */

/* [wxMaxima: input   start ] */
/* Numerical Hydrodynamics in Special Relativity, Jose Maria Marti, 2003 */"";
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* internal specific enthalpy */
h_from_e_P_%rho : h = 1 + e + P / %rho;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* newtonian velocity */
v : [vx, vy, vz];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* relativistic velocity sans u0 */
u : [ux, uy, uz];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* lorentz factor.  W = u0. */
W_from_v : W = 1/sqrt(1 - v.v);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
v_from_u : create_list(v[i] = u[i] / W, i, [1,2,3]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u_from_v : create_list(solve(v_from_u[i], u[i])[1], i, [1,2,3]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* state variables */"";
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* rest mass density */
D_from_%rho_W : D = %rho * W;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* momentum density */
S : [Sx, Sy, Sz];
S_from_%rho_h_W : create_list(S[i] = %rho * h * W^2 * v[i], i, [1,2,3]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* total energy density */
%tau_from_%rho_h_W_P_D : %tau = %rho * h * W^2 - P - D;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* verify that the state variables reduce to newtonian equations when v<<1, h->1 */"";
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
W_newtonian_limit : subst([vx=0, vy=0, vz=0], W_from_v);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
D_newtonian_limit : subst([W_newtonian_limit], D_from_%rho_W);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
S_newtonian_limit : create_list(subst([W_newtonian_limit, h=1], S_from_%rho_h_W[i]), i, [1,2,3]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* this is supposed to recover %rho E = %rho (e + v^2/2) ... with v << 1 ... so v is hard to see, but it's there ... */
subst([h_from_e_P_%rho, W_newtonian_limit, D_newtonian_limit], %tau_from_%rho_h_W_P_D)$
ratsimp(%)$
%tau_newtonian_limit : %;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* speed of sound. TODO FIXME: derive this better.
Sources say Cs^2 = dP/de, with some debate over what the 'e' stands for.
Where did this come from?  the Fortran file that came with the paper.
The code also says Cs^2 = %gamma * P/(%rho + %gamma * P/(%gamma - 1)) */
CsSq_from_P_%rho_h : Cs^2 = %gamma * P / (%rho * h);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
